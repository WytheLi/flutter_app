// import 'package:flutter/material.dart';

// void main() {
//   runApp(MyApp());
// }

// class MyApp extends StatelessWidget {
//   // This widget is the root of your application.
//   @override
//   Widget build(BuildContext context) {
//     return MaterialApp(
//       title: 'Flutter Demo',
//       theme: ThemeData(
//         // This is the theme of your application.
//         //
//         // Try running your application with "flutter run". You'll see the
//         // application has a blue toolbar. Then, without quitting the app, try
//         // changing the primarySwatch below to Colors.green and then invoke
//         // "hot reload" (press "r" in the console where you ran "flutter run",
//         // or simply save your changes to "hot reload" in a Flutter IDE).
//         // Notice that the counter didn't reset back to zero; the application
//         // is not restarted.
//         primarySwatch: Colors.blue,
//         // This makes the visual density adapt to the platform that you run
//         // the app on. For desktop platforms, the controls will be smaller and
//         // closer together (more dense) than on mobile platforms.
//         visualDensity: VisualDensity.adaptivePlatformDensity,
//       ),
// //      home: MyHomePage(title: 'Flutter Demo Home Page'),
//       home: MyHomePage(title: 'hello world!'),
//     );
//   }
// }

// class MyHomePage extends StatefulWidget {
//   MyHomePage({Key key, this.title}) : super(key: key);

//   // This widget is the home page of your application. It is stateful, meaning
//   // that it has a State object (defined below) that contains fields that affect
//   // how it looks.

//   // This class is the configuration for the state. It holds the values (in this
//   // case the title) provided by the parent (in this case the App widget) and
//   // used by the build method of the State. Fields in a Widget subclass are
//   // always marked "final".

//   final String title;

//   @override
//   _MyHomePageState createState() => _MyHomePageState();
// }

// class _MyHomePageState extends State<MyHomePage> {
//   int _counter = 0;

//   void _incrementCounter() {
//     setState(() {
//       // This call to setState tells the Flutter framework that something has
//       // changed in this State, which causes it to rerun the build method below
//       // so that the display can reflect the updated values. If we changed
//       // _counter without calling setState(), then the build method would not be
//       // called again, and so nothing would appear to happen.
//       _counter++;
//     });
//   }

//   @override
//   Widget build(BuildContext context) {
//     // This method is rerun every time setState is called, for instance as done
//     // by the _incrementCounter method above.
//     //
//     // The Flutter framework has been optimized to make rerunning build methods
//     // fast, so that you can just rebuild anything that needs updating rather
//     // than having to individually change instances of widgets.
//     return Scaffold(
//       appBar: AppBar(
//         // Here we take the value from the MyHomePage object that was created by
//         // the App.build method, and use it to set our appbar title.
//         title: Text(widget.title),
//       ),
//       body: Center(
//         // Center is a layout widget. It takes a single child and positions it
//         // in the middle of the parent.
//         child: Column(
//           // Column is also a layout widget. It takes a list of children and
//           // arranges them vertically. By default, it sizes itself to fit its
//           // children horizontally, and tries to be as tall as its parent.
//           //
//           // Invoke "debug painting" (press "p" in the console, choose the
//           // "Toggle Debug Paint" action from the Flutter Inspector in Android
//           // Studio, or the "Toggle Debug Paint" command in Visual Studio Code)
//           // to see the wireframe for each widget.
//           //
//           // Column has various properties to control how it sizes itself and
//           // how it positions its children. Here we use mainAxisAlignment to
//           // center the children vertically; the main axis here is the vertical
//           // axis because Columns are vertical (the cross axis would be
//           // horizontal).
//           mainAxisAlignment: MainAxisAlignment.center,
//           children: <Widget>[
//             Text(
//               'You have pushed the button this many times:',
//             ),
//             Text(
//               '$_counter',
//               style: Theme.of(context).textTheme.headline4,
//             ),
//           ],
//         ),
//       ),
//       floatingActionButton: FloatingActionButton(
//         onPressed: _incrementCounter,
//         tooltip: 'Increment',
//         child: Icon(Icons.add),
//       ), // This trailing comma makes auto-formatting nicer for build methods.
//     );
//   }
// }

import 'package:flutter/material.dart';

// 动态列表
void main() => runApp(
  MyApp(
    items: new List<String>.generate(30, (i) => 'Item $i')
  )
);

class MyApp extends StatelessWidget{
  final List<String> items;
  MyApp({Key key, @required this.items}):super(key:key);

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'ListView widget',
      home: Scaffold(
        body: new ListView.builder(
          itemCount: items.length,
          itemBuilder: (context, index){
            return new ListTile(
              title:new Text('${items[index]}'),
            );
          },
        ),
      ),
    );
  }
}

// void main() => runApp(MyApp());
//
// class MyApp extends StatelessWidget{
//   @override
//   Widget build(BuildContext context){
//     return MaterialApp(
//       title: 'Welcome to Flutter',
//       home: Scaffold(
//         appBar: AppBar(
//           title: Text('Welcome to flutter'),
//         ),
//         // body: Center(
//         //   // 文本组件
//         //   // child: Text(
//         //   //   '成在坚持AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA',
//         //   //   textAlign: TextAlign.left,
//         //   //   // maxLines: 1,
//         //   //   // overflow: TextOverflow.ellipsis,
//         //   //   style: TextStyle(
//         //   //     fontSize: 18,
//         //   //     color: Color.fromARGB(255, 168, 168, 168),
//         //   //     decoration: TextDecoration.underline,
//         //   //     decorationStyle: TextDecorationStyle.solid,
//         //   //   ),
//         //   // ),
//
//         //   // 容器组件
//         //   // child: Container(
//         //   //   child: Text(
//         //   //     'hello Container',
//         //   //     style: TextStyle(fontSize: 40),
//         //   //   ),
//         //   //   alignment: Alignment.topLeft,
//         //   //   width: 500.0,
//         //   //   height: 300.0,
//         //   //   // color: Colors.lightBlue,
//         //   //   // padding: const EdgeInsets.all(10.0),
//         //   //   padding: const EdgeInsets.fromLTRB(10.0, 30.0, 0.0, 0.0),
//         //   //   margin: const EdgeInsets.all(10.0),
//         //   //   decoration: BoxDecoration(  // 与color属性冲突
//         //   //     gradient: const LinearGradient(
//         //   //       colors:[Colors.lightBlue,Colors.greenAccent,Colors.purple]
//         //   //     ),
//         //   //     border: Border.all(width: 2.0, color: Colors.red)
//         //   //   ),
//         //   // ),
//
//         //   // 图片组件
//         //   // child: Container(
//         //   //   child: Image.network(
//         //   //     'http://47.101.37.196/media/blog/2020/05/5150721ccff03822a79b5da84141bcd9_xiKQFvy.jpg',
//         //   //     // scale: 1.0,
//         //   //     // fit: BoxFit.cover,
//
//         //   //     // 图片混合模式，能让图片改变颜色
//         //   //     // color: Colors.greenAccent,
//         //   //     // colorBlendMode: BlendMode.darken,
//
//         //   //     // 图片重复
//         //   //     repeat: ImageRepeat.repeat,
//         //   //   ),
//         //   //   width: 500.0,
//         //   //   height: 300.0,
//         //   //   color: Colors.lightBlue,
//         //   // ),
//         // ),
//
//         // 列表组件
//         // body: new ListView(
//         //   children: [
//         //     new ListTile(
//         //       leading: new Icon(Icons.access_time),
//         //       title: new Text('access_time')
//         //     ),
//
//         //     new ListTile(
//         //       leading: new Icon(Icons.access_time),
//         //       title: new Text('access_balance'),
//         //     )
//         //   ],
//         // ),
//
//         // body: Container(
//         //   child: new ListView(
//         //     children: [
//         //       new ListTile(
//         //         leading: new Icon(Icons.access_time),
//         //         title: new Text('access_time')
//         //       ),
//         //       new ListTile(
//         //         leading: new Icon(Icons.access_time),
//         //         title: new Text('access_time')
//         //       ),
//         //     ],
//         //   ),
//         // ),
//
//         // 图片列表
//         // body: new ListView(
//         //   children: [
//         //     new Image.network(
//         //       'http://47.101.37.196/media/blog/2020/05/5150721ccff03822a79b5da84141bcd9_xiKQFvy.jpg',
//         //     ),
//
//         //     new Image.network(
//         //       'http://47.101.37.196/media/blog/2020/06/timg_bJSOma7.jpg',
//         //     )
//         //   ]
//         // ),
//
//         // 横向列表
//          body: Center(
//            child: Container(
//              height: 200.0,
//              child: MyList()
//              // child: new ListView(
//              //   scrollDirection: Axis.horizontal,
//              //   children: [
//              //     new Container(
//              //       width: 180.0,
//              //       color: Colors.lightBlue,
//              //     ),
//              //     new Container(
//              //       width: 180.0,
//              //       color: Colors.amber,
//              //     ),
//              //     new Container(
//              //       width: 180.0,
//              //       color: Colors.deepOrange,
//              //     ),
//              //     new Container(
//              //       width: 180.0,
//              //       color: Colors.deepPurpleAccent,
//              //     ),
//              //   ],
//              // ),
//            ),
//          ),
//
//       ),
//     );
//   }
// }


 class MyList extends StatelessWidget{
   @override
   Widget build(BuildContext context){
     return ListView(
       scrollDirection: Axis.horizontal,
        children: [
          new Container(
            width: 180.0,
            color: Colors.lightBlue,
          ),
          new Container(
            width: 180.0,
            color: Colors.amber,
          ),
          new Container(
            width: 180.0,
            color: Colors.deepOrange,
          ),
          new Container(
            width: 180.0,
            color: Colors.deepPurpleAccent,
          ),
        ],
     );
   }
 }